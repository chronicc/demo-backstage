name: Build & Deploy Application Container Image
on:
  push:
    paths-ignore:
      - 'docker-compose.yaml'
      - 'examples/**'
      - 'README.md'
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout git repository
        uses: actions/checkout@v3

      - name: Use Node.js 16
        uses: actions/setup-node@v3
        with:
          node-version: 16.x

      - name: Yarn install
        uses: borales/actions-yarn@v3.0.0
        with:
          cmd: install

      - name: Yarn tsc
        uses: borales/actions-yarn@v3.0.0
        with:
          cmd: tsc

      - name: Yarn build
        uses: borales/actions-yarn@v3.0.0
        with:
          cmd: build

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          file: packages/backend/Dockerfile
          push: true
          tags: chronicc/demo-backstage:latest
          cache-from: type=registry,ref=chronicc/demo-backstage:buildcache
          cache-to: type=registry,ref=chronicc/demo-backstage:buildcache,mode=max

      - name: Update repo description
        uses: peter-evans/dockerhub-description@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          repository: chronicc/demo-backstage

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout git repository
        uses: actions/checkout@v3

      - name: Install helm
        uses: azure/setup-helm@v1
        id: install

      - name: Install chart dependencies
        run: ${{ steps.install.outputs.helm-path }} dependency update ./charts/demo-backstage

      - name: Write kubeconfig
        run: echo "${{ secrets.KUBECONFIG }}" > ./kubeconfig && chmod 600 ./kubeconfig

      - name: Write values file
        run: echo "${{ secrets.HELM_VALUES }}" > ./values.yaml

      - name: Helm deploy
        run: ${{ steps.install.outputs.helm-path }} upgrade --install
          --create-namespace
          --namespace=backstage
          --kubeconfig=./kubeconfig
          --values=./values.yaml
          backstage ./charts/demo-backstage

  # test:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - run: echo "${{ secrets.HELM_VALUES_TEST }}" | sed 's/./&/g' > ./values.yaml
  #     - run: cat ./values.yaml
